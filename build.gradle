plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {

	mavenCentral()
	mavenLocal()
	maven {
		url "https://maven.tterrag.com/"
	}
	maven {
		url "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
	maven { url = "https://mvn.devos.one/releases/" }
	maven { url = "https://mvn.devos.one/snapshots/" }
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = "https://maven.parchmentmc.org" }
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://maven.cafeteria.dev" }
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://jitpack.io/" }
}

dependencies {

	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation("me.alphamode:ForgeTags:${project.forge_tags_version}")
	modImplementation("com.electronwill.night-config:core:${project.night_config_core_version}")
	modImplementation("com.electronwill.night-config:toml:${project.night_config_toml_version}")
	modImplementation("curse.maven:forge-config-api-port-fabric-547434:${project.config_api_id}")
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation("com.simibubi:Create:mc${create_version}")

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
